#header h1 {
  font-size: 26px;
  font-weight: bold;
}
#header p {
  font-size: 12px;
}
#header p a {
  text-decoration: none;
}
#header p a:hover {
  border-width: 1px;
}
#header {
  color: #333333;
  border-left: 1px;
  border-right: 2px;
}
#footer {
  color: #114411;
  border-color: #7d2717;
}
nav:after {
  content: "123";
  color: #114411;
  border-color: #7d2717;
}
/*
***你也可以定义不带参数属性集合,如果你想隐藏这个属性集合，不让它暴露到CSS中去，但是你还想在其他的属性集合中引用
*/
pre {
  text-wrap: wrap;
  white-space: pre-wrap;
  white-space: -moz-pre-wrap;
  word-wrap: break-word;
}
/*省略号的使用方法*/
.more {
  display: block;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
/*
***有些情况下，我们想根据传入的参数来改变混合的默认呈现
*/
.getClass {
  color: #a2a2a2;
  display: block;
}
/*
***清楚浮动的样式
*/
.clearfix:after {
  clear: both;
  display: block;
  content: "";
  line-height: 0;
  height: 0;
  visibility: hidden;
}
/*
***当我们想根据表达式进行匹配，而非根据值和参数匹配时
*/
.class1 {
  background-color: black;
  color: #ddd;
}
.class2 {
  background-color: white;
  color: #555;
}
/*
***如果想基于值的类型进行匹配isnumber、iscolor、isstring、iskeyword、isurl
*/
/*
***你可以在main文件中通过下面的形势引入 .less 文件, .less 后缀可带可不带
*/
/*
***变量可以用类似ruby和php的方式嵌入到字符串中，像@{name}这样的结构
*/
.hello {
  background-image: url("http://www.baidu.com/images/bg.png");
}
/*
***有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.
*/
.class {
  filter: ms:alwaysHasItsOwnSyntax.For.Stuff();
}
/*
***JavaScript 表达式也可以在.less 文件中使用. 可以通过反引号的方式使用:
*/
